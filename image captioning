pip install numpy pandas matplotlib pillow torch torchvision transformers
import torch
import torchvision.models as models
import torchvision.transforms as transforms
from PIL import Image
import numpy as np
from transformers import GPT2Tokenizer, GPT2LMHeadModel

# Load pre-trained ResNet model
resnet = models.resnet50(pretrained=True)
resnet.eval()

# Load pre-trained GPT-2 model and tokenizer
tokenizer = GPT2Tokenizer.from_pretrained("gpt2")
gpt2 = GPT2LMHeadModel.from_pretrained("gpt2")
gpt2.eval()

def preprocess_image(image_path):
    transform = transforms.Compose([
        transforms.Resize(256),
        transforms.CenterCrop(224),
        transforms.ToTensor(),
        transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]),
    ])
    image = Image.open(image_path)
    image = transform(image).unsqueeze(0)  # Add batch dimension
    return image

def extract_features(image_tensor):
    with torch.no_grad():
        features = resnet(image_tensor)
    return features

def generate_caption(features):
    features = features.view(1, -1)
    input_ids = tokenizer.encode("Image: ", return_tensors="pt")
    
    with torch.no_grad():
        outputs = gpt2.generate(
            input_ids,
            max_length=50,
            num_beams=5,
            early_stopping=True,
            num_return_sequences=1,
        )
    caption = tokenizer.decode(outputs[0], skip_special_tokens=True)
    return caption

# Example usage
image_path = "path/to/your/image.jpg"
image_tensor = preprocess_image(image_path)
image_features = extract_features(image_tensor)
caption = generate_caption(image_features)
print("Generated Caption:", caption)

